version: '3'
services:
  nginx:
    image: nginx
    ports:
      - "80:80"
    depends_on:
      - scala-cask-app
    links:
      - scala-cask-app
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf

  scala-cask-app:
    image: scala-cask-app:latest

  mongodb:
    image: mongo
    volumes:
      - mongo_data:/data/db
      - ./mongo/init/:/docker-entrypoint-initdb.d
    ports:
      - "27017:27017"
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: mydatabase

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node

  influxdb:
    image: influxdb:latest
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: vlad
      DOCKER_INFLUXDB_INIT_PASSWORD: vladvlad
      DOCKER_INFLUXDB_INIT_ORG: org
      DOCKER_INFLUXDB_INIT_BUCKET: bucket
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: VJEFSpiu1pUN38unLpIyjyFIYnrt3cyIt9twF8VgffNihQsN2b5ghS3w6FLkZaqvEmmhxYaU9xBuJBX1exDFvQ==
    ports:
      - "8086:8086"
    volumes:
      - ./:/imports
      - influxdb_data:/var/lib/influxdb2

  telegraf:
    image: telegraf:latest
    user: "root:1001"
    restart: always
    depends_on:
      - influxdb
    links:
      - influxdb
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
    ports:
      - '127.0.0.1:8125:8125/udp'

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
      - grafana_data:/var/lib/grafana

volumes:
  grafana_data: {}
  influxdb_data: {}
  mongo_data: {}
